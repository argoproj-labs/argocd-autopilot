// Code generated by interfacer; DO NOT EDIT

package github

import (
	"context"
	"github.com/google/go-github/v43/github"
)

// Users is an interface generated for "github.com/google/go-github/v43/github.UsersService".
type Users interface {
	AcceptInvitation(context.Context, int64) (*github.Response, error)
	AddEmails(context.Context, []string) ([]*github.UserEmail, *github.Response, error)
	BlockUser(context.Context, string) (*github.Response, error)
	CreateGPGKey(context.Context, string) (*github.GPGKey, *github.Response, error)
	CreateKey(context.Context, *github.Key) (*github.Key, *github.Response, error)
	CreateProject(context.Context, *github.CreateUserProjectOptions) (*github.Project, *github.Response, error)
	DeclineInvitation(context.Context, int64) (*github.Response, error)
	DeleteEmails(context.Context, []string) (*github.Response, error)
	DeleteGPGKey(context.Context, int64) (*github.Response, error)
	DeleteKey(context.Context, int64) (*github.Response, error)
	DemoteSiteAdmin(context.Context, string) (*github.Response, error)
	Edit(context.Context, *github.User) (*github.User, *github.Response, error)
	Follow(context.Context, string) (*github.Response, error)
	Get(context.Context, string) (*github.User, *github.Response, error)
	GetByID(context.Context, int64) (*github.User, *github.Response, error)
	GetGPGKey(context.Context, int64) (*github.GPGKey, *github.Response, error)
	GetHovercard(context.Context, string, *github.HovercardOptions) (*github.Hovercard, *github.Response, error)
	GetKey(context.Context, int64) (*github.Key, *github.Response, error)
	IsBlocked(context.Context, string) (bool, *github.Response, error)
	IsFollowing(context.Context, string, string) (bool, *github.Response, error)
	ListAll(context.Context, *github.UserListOptions) ([]*github.User, *github.Response, error)
	ListBlockedUsers(context.Context, *github.ListOptions) ([]*github.User, *github.Response, error)
	ListEmails(context.Context, *github.ListOptions) ([]*github.UserEmail, *github.Response, error)
	ListFollowers(context.Context, string, *github.ListOptions) ([]*github.User, *github.Response, error)
	ListFollowing(context.Context, string, *github.ListOptions) ([]*github.User, *github.Response, error)
	ListGPGKeys(context.Context, string, *github.ListOptions) ([]*github.GPGKey, *github.Response, error)
	ListInvitations(context.Context, *github.ListOptions) ([]*github.RepositoryInvitation, *github.Response, error)
	ListKeys(context.Context, string, *github.ListOptions) ([]*github.Key, *github.Response, error)
	ListProjects(context.Context, string, *github.ProjectListOptions) ([]*github.Project, *github.Response, error)
	PromoteSiteAdmin(context.Context, string) (*github.Response, error)
	Suspend(context.Context, string, *github.UserSuspendOptions) (*github.Response, error)
	UnblockUser(context.Context, string) (*github.Response, error)
	Unfollow(context.Context, string) (*github.Response, error)
	Unsuspend(context.Context, string) (*github.Response, error)
}
