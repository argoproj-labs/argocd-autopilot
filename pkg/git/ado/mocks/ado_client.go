// Code generated by mockery (devel). DO NOT EDIT.

package mocks

import (
	context "context"

	git "github.com/microsoft/azure-devops-go-api/azuredevops/git"
	mock "github.com/stretchr/testify/mock"
)

// AdoClient is an autogenerated mock type for the AdoClient type
type AdoClient struct {
	mock.Mock
}

// CreateRepository provides a mock function with given fields: _a0, _a1
func (_m *AdoClient) CreateRepository(_a0 context.Context, _a1 git.CreateRepositoryArgs) (*git.GitRepository, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *git.GitRepository
	if rf, ok := ret.Get(0).(func(context.Context, git.CreateRepositoryArgs) *git.GitRepository); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*git.GitRepository)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, git.CreateRepositoryArgs) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
